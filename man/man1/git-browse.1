.\" Writing groff? `man 7 groff` and `info groff` are your friends.
.TH "GIT\-BROWSE" "1" "2012-08-16" "git-browse 1.0" "Git Browse Manual"
.\" ***** Formatting *****
.nh \" disable hyphenation
.ad l \" disable justifiction
.\" ***** Content ****
.SH "NAME"
.sp
.nf
git-browse \- Interactively browse a file's Git history
.SH "SYNOPSIS"
\fIgit browse\fR [<commit>] <path>
.fi
.sp
.SH "DESCRIPTION"
.sp
Browse the Git history of a single file. \fIgit-browse\fR is similar to \fBgit-blame\fR(1) but allows you to move between revisions interactively\&.
.sp
The commands for navigating around the file are based on \fBless\fR(1) and should therefore be familiar to most command line users. However, since only a subset of the \fBless\fR commands are currently supported and there are additional commands to move forwards and back through history it's worth glancing though the commands section below.
.SH "OPTIONS"
.PP
<commit>
.RS 4
The commit to start from. Defaults to HEAD.
.RE
.PP
<path>
.RS 4
The path to the file you want to examine. The file must be tracked by Git.
.RE
.SH "COMMANDS"
.SS "Navigating around the file"
.PP
Most navigation commands can be prefixed with the number of times they should
be executed, for example "3j" moves down by three lines.
.PP
RETURN or DOWN or j or e
.RS 4
Move down one line.
.RE
.PP
UP or k or y
.RS 4
Move up one line.
.RE
.PP
PAGE-DOWN or SPACE or f or z
.RS 4
Move down by one screen.
.RE
.PP
PAGE-UP or b or w
.RS 4
Move up by one screen.
.RE
.PP
d
.RS 4
Move down half a screen.
.RE
.PP
u
.RS 4
Move up half a screen.
.RE
.PP
END or G or >
.RS 4
Move to the bottom of the file.
.RE
.PP
HOME or G or <
.RS 4
Move to the top of the file.
.RE
.PP
<n> RETURN
.RS 4
Jumps to line <n>, for example pressing "4" and then "RETURN" jumps to line
4 of the file.
.RE

.SS "Navigating Git history"
.PP
Git navigation commands can be prefixed with the number of times they should
be executed, for example "3]" moves forward by three commits.
.PP
When moving through history the selected line will be preserved, even if
lines are added or removed before it.
.PP
[
.RS 4
Move to the previous commit that changed the selected file.
.RE
.PP
]
.RS 4
Move to the next commit that changed the selected file.
.RE

.SS "Searching"
.PP
/string
.RS 4
Search forwards through the file for the next line containing the string. All
matches will be highlighted, and the selection will jump to the next line
containing a match.
.RE
.PP
?string
.RS 4
Search backwards through the file for the next line containing the string. All
matches will be highlighted, and the selection will jump to the next line
containing a match.
.RE
.PP
n
.RS 4
Jump to the next match for the latest search. The direction of the search is
respected; if you searched using / the next match means moving down the file,
but if you searched using ? the next match means moving up the file.
.RE
.PP
N
.RS 4
Jump to the previous match for the latest search. As with the "n" command,
the direction of the search is respected.
.RE

.SS "Quitting"
.PP
q or Q
.RS 4
Quit.
.RE
.PP
s
.RS 4
Quit, and run \fBgit-show\fR(1) for the currently selected commit.
.RE
